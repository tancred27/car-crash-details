{"version":3,"sources":["src/screens/screen-container.jsx","src/utils/functions.js","src/components/info-component.jsx","src/components/details-component.jsx","src/components/card-component.jsx","src/config.js","src/components/table-component.jsx","src/components/pagination-component.jsx","src/components/toggle-view-component.jsx","src/components/date-picker-component.jsx","src/components/options-component.jsx","src/screens/list-screen.jsx","src/screens/details-screen.jsx","App.jsx","assets/fonts/Poppins-Regular.ttf","assets/fonts/Poppins-SemiBold.ttf"],"names":["styles","StyleSheet","create","container","flex","ScreenContainer","children","style","View","Dimensions","get","SCREEN_WIDTH","width","SCREEN_HEIGHT","height","getScaleNumber","size","dimension","Math","min","dpi","round","getFormattedDate","date","split","getFormattedTime","time","hours","mins","padStart","row","marginVertical","flexDirection","flexWrap","alignItems","justifyContent","headerText","fontFamily","contentText","color","Info","header","content","Text","Details","data","map","details","index","toString","card","padding","minWidth","marginHorizontal","borderWidth","borderColor","backgroundColor","Card","onPress","customStyle","hasScrollView","TouchableOpacity","activeOpacity","ScrollView","fadingEdgeLength","tableHeaders","cardDataMap","vehicle_type_code1","vehicle_type_code2","crash_date","crash_time","headers","cells","tableBorder","text","textAlign","colContainer","flexGrow","colContent","TableView","navigation","tableCell","col","crashData","navigate","name","params","overflow","borderStyle","textStyle","Pagination","onPressLeft","onPressRight","offset","AntDesign","Platform","OS","ToggleView","showTable","displayTable","FontAwesome","iconStyle","pickerContainer","borderRadius","button","paddingHorizontal","buttonText","DatePicker","value","onDateChange","clearDate","useState","open","setOpen","toISOString","mode","locale","visible","Date","onConfirm","onDismiss","innerContainer","Options","cardsContainer","loaderStyle","tableContainerStyle","ListScreen","setData","setDate","loading","setLoading","setOffset","setShowTable","opacity","useSharedValue","animatedTableStyles","useAnimatedStyle","withTiming","animatedListStyles","getParams","pagination","$offset","$limit","useEffect","axios","then","res","catch","err","console","log","ActivityIndicator","contentContainerStyle","length","navigateToDetailScreen","screen","maxHeight","DetailsScreen","route","borough","zip_code","location","latitude","longitude","on_street_name","off_street_name","cross_street_name","number_of_persons_injured","number_of_persons_killed","number_of_pedestrians_injured","number_of_pedestrians_killed","number_of_cyclist_injured","number_of_cyclist_killed","number_of_motorist_injured","number_of_motorist_killed","contributing_factor_vehicle_1","contributing_factor_vehicle_2","registerTranslation","en","fetchFonts","Font","Poppins","require","PoppinsBold","title","App","Stack","createNativeStackNavigator","dataLoaded","setDataLaded","NavigationContainer","Navigator","Screen","component","options","headerTitleStyle","headerBackTitle","startAsync","onFinish","onError","module","exports"],"mappings":"mVAGMA,EAASC,UAAWC,OAAO,CAC/BC,UAAW,CACTC,KAAM,KAQKC,EAJS,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,SAA6B,IAAnBC,aAAmB,MAAX,KAAW,EACtD,OAAO,cAACC,EAAA,QAAD,CAAMD,MAAO,CAACP,EAAOG,UAAWI,GAAhC,SAAyCD,K,QCRlD,E,MAAuDG,QAAWC,IAAI,UAAvDC,EAAf,EAAQC,MAA6BC,EAArC,EAA6BC,OAEvBC,EAAiB,SAACC,GAGtB,IAAMC,EAAYC,KAAKC,IAAIN,EAAeF,GACpCS,EAAMF,KAAKG,MAAMJ,EAAY,KACnC,OAAIG,GAAO,EACDJ,EAAOI,EAAO,EAAIJ,EAErBA,GAGHM,EAAmB,SAACC,GAAD,OAAUA,EAAKC,MAAM,KAAK,IAE7CC,EAAmB,SAACC,GACxB,MAAsBA,EAAKF,MAAM,KAAjC,WAAOG,EAAP,KAAcC,EAAd,KACA,OAAUD,EAAME,SAAS,EAAG,KAA5B,IAAoCD,EAAKC,SAAS,EAAG,MCfjD7B,EAASC,UAAWC,OAAO,CAC/B4B,IAAK,CACHC,eAAgBhB,EAAe,GAC/BiB,cAAe,MACfC,SAAU,OACVC,WAAY,SACZC,eAAgB,cAElBC,WAAY,CACVC,WAAY,WAEdC,YAAa,CACXD,WAAY,UACZE,MAAO,aAaIC,EATF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACtB,OACE,eAAClC,EAAA,QAAD,CAAMD,MAAOP,EAAO8B,IAApB,UACE,cAACa,EAAA,QAAD,CAAMpC,MAAOP,EAAOoC,WAApB,SAAiCK,IACjC,cAACE,EAAA,QAAD,CAAMpC,MAAOP,EAAOsC,YAApB,SAAkCI,QCXzBE,EAVC,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACjB,OACE,cAACrC,EAAA,QAAD,UACGqC,EAAKC,KAAI,SAACC,EAASC,GAAV,OACR,cAAC,EAAD,CAA6BP,OAAQM,EAAQN,OAAQC,QAASK,EAAQL,SAA3DM,EAAMC,kBCHnBjD,EAASC,UAAWC,OAAO,CAC/BgD,KAAM,CACJC,QAASpC,EAAe,IACxBqC,SAAUrC,EAAe,KACzBgB,eAAgBhB,EAAe,IAC/BsC,iBAAkBtC,EAAe,IACjCuC,YAAa,EACbC,YAAa,UACbC,gBAAiB,WAmBNC,EAfF,SAAC,GAA2D,IAAzDZ,EAAwD,EAAxDA,KAAMa,EAAkD,EAAlDA,QAASC,EAAyC,EAAzCA,YAAyC,IAA5BC,qBAA4B,SACtE,OACE,cAACC,EAAA,QAAD,CAAkBtD,MAAO,CAACP,EAAOkD,KAAMS,GAAcD,QAASA,EAASI,cAAe,EAAtF,SACGF,EACC,cAACG,EAAA,QAAD,CAAYC,iBAAkB,EAA9B,SACE,cAAC,EAAD,CAASnB,KAAMA,MAGjB,cAAC,EAAD,CAASA,KAAMA,O,0BCjBjBoB,EAAe,CAAC,QAAS,QAAS,aAAc,cAGhDC,EAAc,SAACrB,GAAD,MAAU,CAC5B,CACEJ,OAAQ,UACRC,QAASG,EAAKsB,oBAAsB,KAEtC,CACE1B,OAAQ,UACRC,QAASG,EAAKuB,oBAAsB,KAEtC,CACE3B,OAAQ,eACRC,QAASpB,EAAiBuB,EAAKwB,aAEjC,CACE5B,OAAQ,eACRC,QAASG,EAAKyB,WAAa7C,EAAiBoB,EAAKyB,YAAc,OCnB7DtE,EAASC,UAAWC,OAAO,CAC/BC,UAAW,CACTS,MAAO,OACPuC,QAASpC,EAAe,GACxBgB,eAAgBhB,EAAe,KAEjCwD,QAAS,CACPzD,OAAQC,EAAe,IACvByC,gBAAiB,WAEnBgB,MAAO,CACL1D,OAAQC,EAAe,KAEzB0D,YAAa,CACXnB,YAAa,EACbC,YAAa,WAEfmB,KAAM,CACJrC,WAAY,cACZsC,UAAW,UAEb7C,IAAK,CACHE,cAAe,OAEjB4C,aAAc,CACZC,SAAU,EACVrB,gBAAiB,QACjBxB,cAAe,MACflB,OAAQC,EAAe,IACvBoC,QAASpC,EAAe,GACxBmB,WAAY,SACZC,eAAgB,UAElB2C,WAAY,CACVzC,WAAY,UACZsC,UAAW,YAiCAI,EA7BG,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,WAAYnC,EAAoB,EAApBA,KAAM0B,EAAc,EAAdA,QAK/BU,EAAY,SAACC,EAAKpD,GAAN,OAChB,cAAC+B,EAAA,QAAD,CAAkBH,QAAS,kBALGyB,EAK0BrD,OAJxDkD,EAAWI,SAAS,CAAEC,KAAM,UAAWC,OAAQ,CAAEH,eADpB,IAACA,GAKgC5E,MAAO,CAAEgF,SAAU,UAAjF,SACE,cAAC/E,EAAA,QAAD,CAAMD,MAAOP,EAAO4E,aAApB,SACE,cAACjC,EAAA,QAAD,CAAMpC,MAAOP,EAAO8E,WAApB,SAAiCI,EAAIxC,eAK3C,OACE,cAAClC,EAAA,QAAD,CAAMD,MAAOP,EAAOG,UAApB,SACE,eAAC,QAAD,CAAOqF,YAAaxF,EAAOyE,YAA3B,UACE,cAAC,MAAD,CAAK5B,KAAM0B,EAAShE,MAAOP,EAAOuE,QAASkB,UAAWzF,EAAO0E,OAC5D7B,EAAKC,KAAI,SAAChB,EAAKkB,GAAN,OACR,cAAC,eAAD,CAAqCzC,MAAOP,EAAO8B,IAAnD,SACGoC,EAAYpC,GAAKgB,KAAI,SAACoC,EAAKlC,GAAN,OACpB,cAAC,OAAD,CAA6BH,KAAMoC,EAAUC,EAAKpD,GAAM2D,UAAWzF,EAAO0E,MAA/D1B,EAAMC,gBAFFD,EAAMC,qB,SCzD7BjD,EAASC,UAAWC,OAAO,CAC/BC,UAAW,CACT4B,eAAgBhB,EAAe,IAC/BiB,cAAe,MACfpB,MAAO,MACPsB,WAAY,SACZC,eAAgB,iBAElBuC,KAAM,CACJrC,WAAY,UACZsC,UAAW,SACXpC,MAAO,aAcImD,EAVI,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,YAAaC,EAA2B,EAA3BA,aAAcC,EAAa,EAAbA,OAC/C,OACE,eAACrF,EAAA,QAAD,CAAMD,MAAOP,EAAOG,UAApB,UACE,cAAC2F,EAAA,QAAD,CAAWpC,QAASiC,EAAaN,KAAK,aAAarE,KAAMD,EAAe,IAAKwB,MAAM,YACnF,eAACI,EAAA,QAAD,CAAMpC,MAAOP,EAAO0E,KAApB,UAA8BmB,EAA9B,OAA0CA,EFrBxB,GEqBlB,WACA,cAACC,EAAA,QAAD,CAAWpC,QAASkC,EAAcP,KAAK,cAAcrE,KAAMD,EAAe,IAAKwB,MAAM,gB,SCrBrFvC,EAASC,UAAWC,OAAO,CAC/BC,UAAW,CACT6B,cAAe,MACfE,WAAY,SACZC,eAAgB,eAChBJ,eAAgBhB,EAAe,IAC/BH,MAAuB,QAAhBmF,UAASC,GAAe,MAAQjF,EAAe,QAa3CkF,EATI,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aAC/B,OACE,eAAC3F,EAAA,QAAD,CAAMD,MAAOP,EAAOG,UAApB,UACE,cAAC2F,EAAA,QAAD,CAAWT,KAAK,QAAQ3B,QAAS,kBAAMyC,GAAa,IAAOnF,KAAMD,EAAe,IAAKwB,MAAO2D,EAAY,UAAY,UACpH,cAACE,EAAA,QAAD,CAAaf,KAAK,OAAO3B,QAAS,kBAAMyC,GAAa,IAAQnF,KAAMD,EAAe,IAAKwB,MAAQ2D,EAAwB,QAAZ,gBCb3GlG,GAASC,UAAWC,OAAO,CAC/BC,UAAW,CACT6B,cAAe,MACfE,WAAY,SACZC,eAAgB,eAChBvB,MAAuB,QAAhBmF,UAASC,GAAe,MAAQ,OACvCjE,eAAgBhB,EAAe,KAEjCsF,UAAW,CACThD,iBAAkBtC,EAAe,IAEnCuF,gBAAiB,CACftE,cAAe,MACfE,WAAY,SACZC,eAAgB,SAChBgB,QAASpC,EAAe,GACxBuC,YAAa,EACbC,YAAa,UACbgD,aAAcxF,EAAe,IAE/B2D,KAAM,CACJrC,WAAY,UACZE,MAAO,aAETiE,OAAQ,CACNxE,cAAe,MACfE,WAAY,SACZC,eAAgB,SAChBgB,QAASpC,EAAe,GACxB0F,kBAAmB1F,EAAe,IAClCyC,gBAAiB,UACjBF,YAAa,EACbC,YAAa,UACbgD,aAAcxF,EAAe,IAE/B2F,WAAY,CACVnE,MAAO,WAwBIoE,GApBI,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,aAAcC,EAAgB,EAAhBA,UACzC,EAAwBC,oBAAS,GAAjC,WAAOC,EAAP,KAAaC,EAAb,KAOA,OACE,eAACzG,EAAA,QAAD,CAAMD,MAAOP,GAAOG,UAApB,UACE,eAAC0D,EAAA,QAAD,CAAkBH,QAAS,kBAAMuD,GAAQ,IAAO1G,MAAOP,GAAOsG,gBAA9D,UACE,cAAC3D,EAAA,QAAD,CAAMpC,MAAOP,GAAO0E,KAApB,SAA2BkC,EAAQtF,EAAiBsF,EAAMM,eAAiB,eAC3E,cAACpB,EAAA,QAAD,CAAWvF,MAAOP,GAAOqG,UAAWhB,KAAK,WAAWrE,KAAMD,EAAe,IAAKwB,MAAM,eAEtF,cAAC,kBAAD,CAAiB4E,KAAK,SAASC,OAAO,KAAKC,QAASL,EAAMzF,KAAMqF,GAAS,IAAIU,KAAQC,UAXhE,SAACX,GACxBC,EAAaD,EAAMrF,MACnB0F,GAAQ,IAS4GO,UAAW,kBAAMP,GAAQ,MAC3I,cAACpD,EAAA,QAAD,CAAkBtD,MAAOP,GAAOwG,OAAQ9C,QAASoD,EAAjD,SAA4D,cAACnE,EAAA,QAAD,CAAMpC,MAAO,CAACP,GAAO0E,KAAM1E,GAAO0G,YAAlC,yBCtD5D1G,GAASC,UAAWC,OAAO,CAC/BC,UAAW,CACT4B,eAAgBhB,EAAe,IAC/B0F,kBAAmB1F,EAAe,IAClCiB,cAA+B,QAAhB+D,UAASC,GAAe,MAAQ,SAC/CpF,MAAuB,QAAhBmF,UAASC,GAAe,OAAS,MACxCzC,YAAa,UACbrB,WAAY,SACZC,eAAgB,eAChBmB,YAAa,EACbE,gBAAiB,SAEnBiE,eAAgB,CACd7G,MAAuB,QAAhBmF,UAASC,GAAe,MAAQ,OACvChE,cAAe,MACfG,eAAgB,kBAgBLuF,GAZC,SAAC,GAAoG,IAAlG/B,EAAiG,EAAjGA,YAAaC,EAAoF,EAApFA,aAAcC,EAAsE,EAAtEA,OAAQK,EAA8D,EAA9DA,UAAWC,EAAmD,EAAnDA,aAAcS,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,aAAcC,EAAgB,EAAhBA,UAClG,OACE,eAACtG,EAAA,QAAD,CAAMD,MAAOP,GAAOG,UAApB,UACE,cAAC,GAAD,CAAYyG,MAAOA,EAAOC,aAAcA,EAAcC,UAAWA,IACjE,eAACtG,EAAA,QAAD,CAAMD,MAAOP,GAAOyH,eAApB,UACE,cAAC,EAAD,CAAYvB,UAAWA,EAAWC,aAAcA,IAChD,cAAC,EAAD,CAAYR,YAAaA,EAAaC,aAAcA,EAAcC,OAAQA,W,+NCrBlF,IAAM7F,GAASC,UAAWC,OAAO,CAC/BC,UAAW,CACTC,KAAM,EACN4B,cAAe,SACfE,WAAY,SACZC,eAAgB,UAElBwF,eAAgB,CACd3F,cAAe,MACfC,SAAU,OACVkB,QAASpC,EAAe,IACxBmB,WAAY,SACZC,eAAgB,SAChBvB,MAAO,QAETgH,YAAa,CACXxH,KAAM,GAERyH,oBAAqB,CACnBjH,MAAuB,QAAhBmF,UAASC,GAAe,OAASrF,EAAeI,EAAe,KAExE2D,KAAM,CACJrC,WAAY,aAsGDyF,GAlGI,SAAC,GAAoB,IAAlB9C,EAAiB,EAAjBA,WACpB,EAAwB+B,mBAAS,IAAjC,WAAOlE,EAAP,KAAakF,EAAb,KACA,EAAwBhB,qBAAxB,WAAOxF,EAAP,KAAayG,EAAb,KACA,EAA8BjB,oBAAS,GAAvC,WAAOkB,EAAP,KAAgBC,EAAhB,KACA,EAA4BnB,mBAAS,GAArC,WAAOlB,EAAP,KAAesC,EAAf,KACA,EAAkCpB,oBAAS,GAA3C,WAAOb,EAAP,KAAkBkC,EAAlB,KAEMC,EAAUC,yBAAepC,GAEzBqC,EAAsBC,2BAAiB,WAAD,iBAC1C,MAAO,CACLH,QAASA,EAAQzB,MAAQ6B,qBAAW,GAAKA,qBAAW,KAFZ,2BA5CjCJ,EA4CiC,WA5CDI,cA4CC,wRAAC,IAMvCC,EAAqBF,2BAAiB,WAAD,iBACzC,MAAO,CACLH,QAASA,EAAQzB,MAAQ6B,qBAAW,GAAKA,qBAAW,KAFb,2BAlDhCJ,EAkDgC,WAlDAI,cAkDA,uRAAC,IAMtCE,EAAY,WAChB,IAAMC,EAAa,CAAEC,QAAShD,EAAQiD,ONvDlB,GMwDpB,OAAOvH,E,mWAAI,EAAK8C,WAAY/C,EAAiBC,EAAK2F,gBAAmB0B,GAAeA,GAGtFG,qBAAU,WACRb,GAAW,GACKc,IAAMtI,IN/DV,wDM+DuB,CAAE4E,OAAQqD,MAE1CM,MAAK,SAACC,GACLnB,EAAQmB,EAAIrG,MACZqF,GAAW,MAEZiB,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAI,wBAAyBF,QACtD,CAACvD,EAAQtE,IA0BZ,OACE,cAAC,EAAD,UACE,eAACf,EAAA,QAAD,CAAMD,MAAOP,GAAOG,UAApB,UACE,cAAC,GAAD,CACE+F,UAAWA,EACXC,aAVa,SAACS,GACpByB,EAAQzB,MAAQA,EAChBwB,EAAaxB,IASPA,MAAOrF,EACPsF,aAlBa,SAACtF,GACpByG,EAAQzG,IAkBFuF,UAfU,kBAAMkB,KAgBhBrC,YAzBa,WACJ,IAAXE,GACJsC,GAAU,SAACtC,GAAD,OAAYA,ENhFF,MMwGdD,aA9BY,WAClBuC,GAAU,SAACtC,GAAD,OAAYA,EN3EF,MMyGdA,OAAQA,IAEToC,EACC,cAACsB,EAAA,QAAD,CAAmBhJ,MAAOP,GAAO4H,YAAa5G,KAAK,QAAQuB,MAAM,YAEjE,cAACwB,EAAA,QAAD,CAAYC,iBAAkB,EAAGwF,sBAAuBxJ,GAAO2H,eAA/D,SACmB,IAAhB9E,EAAK4G,OACJ,cAAC9G,EAAA,QAAD,CAAMpC,MAAOP,GAAO0E,KAApB,4BACEwB,EACF,cAAC,UAAS1F,KAAV,CAAeD,MAAO,CAACgI,EAAqBvI,GAAO6H,qBAAnD,SACE,cAAC,EAAD,CAAOhF,KAAMA,EAAM0B,QAASN,EAAce,WAAYA,MAGxD,cAAC,UAASxE,KAAV,CAAeD,MAAO,CAACmI,EAAoB1I,GAAO2H,gBAAlD,SACG9E,EAAKC,KAAI,SAACqC,EAAWnC,GAAZ,OACR,cAAC,EAAD,CAAMU,QAAS,kBAlDA,SAACyB,GAC9BH,EAAWI,SAAS,CAAEC,KAAM,UAAWC,OAAQ,CAAEH,eAiDduE,CAAuBvE,IAAmCtC,KAAMqB,EAAYiB,IAApCnC,EAAMC,yBCrH/EjD,GAASC,UAAWC,OAAO,CAC/ByJ,OAAQ,CACNzH,WAAY,SACZC,eAAgB,UAElBhC,UAAW,CACTyJ,UAA2B,QAAhB7D,UAASC,GAAe,OAASnF,GAAiB,EAAE,GAC/DsC,QAASpC,EAAe,IACxByC,gBAAiB,QACjB5C,MAAuB,QAAhBmF,UAASC,GAAe,OAASrF,EAAeI,EAAe,OAY3D8I,GARO,SAAC,GAAe,IPUdhH,EOVCiH,EAAY,EAAZA,MACvB,OACE,cAAC,EAAD,CAAiBvJ,MAAOP,GAAO2J,OAA/B,SACE,cAAC,EAAD,CAAMhG,YAAa3D,GAAOG,UAAW0C,MPOnBA,EOPwCiH,EAAMxE,OAAOH,UPOtD,cAClBjB,EAAYrB,IADM,CAErB,CACEJ,OAAQ,YACRC,QAASG,EAAKkH,SAAW,KAE3B,CACEtH,OAAQ,aACRC,QAASG,EAAKmH,UAAY,KAE5B,CACEvH,OAAQ,aACRC,QAASG,EAAKoH,SAAL,IAAoBpH,EAAKqH,SAAzB,KAAsCrH,EAAKsH,UAA3C,IAA0D,KAErE,CACE1H,OAAQ,mBACRC,QAASG,EAAKuH,gBAAkB,KAElC,CACE3H,OAAQ,oBACRC,QAASG,EAAKwH,iBAAmB,KAEnC,CACE5H,OAAQ,sBACRC,QAASG,EAAKyH,mBAAqB,KAErC,CACE7H,OAAQ,8BACRC,QAASG,EAAK0H,2BAEhB,CACE9H,OAAQ,6BACRC,QAASG,EAAK2H,0BAEhB,CACE/H,OAAQ,kCACRC,QAASG,EAAK4H,+BAEhB,CACEhI,OAAQ,iCACRC,QAASG,EAAK6H,8BAEhB,CACEjI,OAAQ,+BACRC,QAASG,EAAK8H,2BAEhB,CACElI,OAAQ,8BACRC,QAASG,EAAK+H,0BAEhB,CACEnI,OAAQ,gCACRC,QAASG,EAAKgI,4BAEhB,CACEpI,OAAQ,+BACRC,QAASG,EAAKiI,2BAEhB,CACErI,OAAQ,kCACRC,QAASG,EAAKkI,+BAAiC,KAEjD,CACEtI,OAAQ,kCACRC,QAASG,EAAKmI,+BAAiC,KAEjD,CACEvI,OAAQ,kCACRC,QAASG,EAAKmI,+BAAiC,KAEjD,CACEvI,OAAQ,kCACRC,QAASG,EAAKmI,+BAAiC,KAEjD,CACEvI,OAAQ,kCACRC,QAASG,EAAKmI,+BAAiC,QOnFsCpH,eAAa,OCXtGqH,8BAAoB,KAAMC,MAE1B,IAAMC,GAAa,WACjB,OAAOC,YAAe,CACpBC,QAASC,EAAQ,KACjBC,YAAaD,EAAQ,QAInBtL,GAASC,UAAWC,OAAO,CAC/BsL,MAAO,CACLnJ,WAAY,iBAID,SAASoJ,KACtB,IAAMC,EAAQC,oBACd,EAAmC5E,oBAAS,GAA5C,WAAO6E,EAAP,KAAmBC,EAAnB,KAEA,OAAKD,EAWH,cAAC,mBAAD,UACE,cAACE,EAAA,QAAD,UACE,eAACJ,EAAMK,UAAP,WACE,cAACL,EAAMM,OAAP,CAAc3G,KAAK,OAAO4G,UAAWnE,GAAYoE,QAAS,CAAEV,MAAO,mBAAoBW,iBAAkBnM,GAAOwL,SAChH,cAACE,EAAMM,OAAP,CAAc3G,KAAK,UAAU4G,UAAWpC,GAAeqC,QAAS,CAAEV,MAAO,oBAAqBY,gBAAiB,GAAID,iBAAkBnM,GAAOwL,gBAbhJ,cAAC,UAAD,CACEa,WAAYlB,GACZmB,SAAU,kBAAMT,GAAa,IAC7BU,QAAS,SAACnD,GAAD,OAASC,QAAQC,IAAIF,Q,0DCrCtCoD,EAAOC,QAAU,IAA0B,+B,oBCA3CD,EAAOC,QAAU,IAA0B,iC","file":"static/js/app.8184ec13.chunk.js","sourcesContent":["import * as React from \"react\";\nimport { View, StyleSheet } from \"react-native\";\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n});\n\nconst ScreenContainer = ({ children, style = null }) => {\n  return <View style={[styles.container, style]}>{children}</View>;\n};\n\nexport default ScreenContainer;\n","import { Dimensions } from \"react-native\";\n\nconst { width: SCREEN_WIDTH, height: SCREEN_HEIGHT } = Dimensions.get(\"screen\");\n\nconst getScaleNumber = (size) => {\n  // return the dpi\n  // return size * PixelRatio.get();\n  const dimension = Math.min(SCREEN_HEIGHT, SCREEN_WIDTH);\n  const dpi = Math.round(dimension / 375);\n  if (dpi >= 2) {\n    return (size * dpi) / 4 + size;\n  }\n  return size;\n};\n\nconst getFormattedDate = (date) => date.split(\"T\")[0];\n\nconst getFormattedTime = (time) => {\n  const [hours, mins] = time.split(\":\");\n  return `${hours.padStart(2, \"0\")}:${mins.padStart(2, \"0\")}`;\n};\n\nexport { getScaleNumber, SCREEN_HEIGHT, SCREEN_WIDTH, getFormattedDate, getFormattedTime };\n","import { View, Text, StyleSheet } from \"react-native\";\n\nimport { getScaleNumber } from \"../utils/functions\";\n\nconst styles = StyleSheet.create({\n  row: {\n    marginVertical: getScaleNumber(5),\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    alignItems: \"center\",\n    justifyContent: \"flex-start\",\n  },\n  headerText: {\n    fontFamily: \"Poppins\",\n  },\n  contentText: {\n    fontFamily: \"Poppins\",\n    color: \"#757575\",\n  },\n});\n\nconst Info = ({ header, content }) => {\n  return (\n    <View style={styles.row}>\n      <Text style={styles.headerText}>{header}</Text>\n      <Text style={styles.contentText}>{content}</Text>\n    </View>\n  );\n};\n\nexport default Info;\n","import { View } from \"react-native\";\n\nimport Info from \"./info-component\";\n\nconst Details = ({ data }) => {\n  return (\n    <View>\n      {data.map((details, index) => (\n        <Info key={index.toString()} header={details.header} content={details.content} />\n      ))}\n    </View>\n  );\n};\n\nexport default Details;\n","import { ScrollView, StyleSheet, TouchableOpacity } from \"react-native\";\n\nimport Details from \"./details-component\";\nimport { getScaleNumber } from \"../utils/functions\";\n\nconst styles = StyleSheet.create({\n  card: {\n    padding: getScaleNumber(10),\n    minWidth: getScaleNumber(200),\n    marginVertical: getScaleNumber(10),\n    marginHorizontal: getScaleNumber(10),\n    borderWidth: 1,\n    borderColor: \"#DBDBDB\",\n    backgroundColor: \"white\",\n  },\n});\n\nconst Card = ({ data, onPress, customStyle, hasScrollView = false }) => {\n  return (\n    <TouchableOpacity style={[styles.card, customStyle]} onPress={onPress} activeOpacity={1}>\n      {hasScrollView ? (\n        <ScrollView fadingEdgeLength={5}>\n          <Details data={data} />\n        </ScrollView>\n      ) : (\n        <Details data={data} />\n      )}\n      \n    </TouchableOpacity>\n  );\n};\n\nexport default Card;\n","import { getFormattedDate, getFormattedTime } from \"./utils/functions\";\n\n// api base url\nconst baseUrl = \"https://data.cityofnewyork.us/resource/h9gi-nx95.json\";\n\nconst paginationLimit = 5;\n\n// headers for table view\nconst tableHeaders = [\"Car 1\", \"Car 2\", \"Crash Date\", \"Crash Time\"];\n\n// mapping api fields to custom headers for data in cards\nconst cardDataMap = (data) => [\n  {\n    header: \"Car 1: \",\n    content: data.vehicle_type_code1 || \"-\",\n  },\n  {\n    header: \"Car 2: \",\n    content: data.vehicle_type_code2 || \"-\",\n  },\n  {\n    header: \"Crash Date: \",\n    content: getFormattedDate(data.crash_date),\n  },\n  {\n    header: \"Crash Time: \",\n    content: data.crash_time ? getFormattedTime(data.crash_time) : \"-\",\n  },\n];\n\n// mapping api fields to custom headers for data in details page\nconst detailsDataMap = (data) => [\n  ...cardDataMap(data),\n  {\n    header: \"Borough: \",\n    content: data.borough || \"-\",\n  },\n  {\n    header: \"Zip code: \",\n    content: data.zip_code || \"-\",\n  },\n  {\n    header: \"Location: \",\n    content: data.location ? `(${data.latitude}, ${data.longitude})` : \"-\",\n  },\n  {\n    header: \"On street name: \",\n    content: data.on_street_name || \"-\",\n  },\n  {\n    header: \"Off street name: \",\n    content: data.off_street_name || \"-\",\n  },\n  {\n    header: \"Cross street name: \",\n    content: data.cross_street_name || \"-\",\n  },\n  {\n    header: \"Number of persons injured: \",\n    content: data.number_of_persons_injured,\n  },\n  {\n    header: \"Number of persons killed: \",\n    content: data.number_of_persons_killed,\n  },\n  {\n    header: \"Number of pedestrians injured: \",\n    content: data.number_of_pedestrians_injured,\n  },\n  {\n    header: \"Number of pedestrians killed: \",\n    content: data.number_of_pedestrians_killed,\n  },\n  {\n    header: \"Number of cyclists injured: \",\n    content: data.number_of_cyclist_injured,\n  },\n  {\n    header: \"Number of cyclists killed: \",\n    content: data.number_of_cyclist_killed,\n  },\n  {\n    header: \"Number of motorists injured: \",\n    content: data.number_of_motorist_injured,\n  },\n  {\n    header: \"Number of motorists killed: \",\n    content: data.number_of_motorist_killed,\n  },\n  {\n    header: \"Contributing factor vehicle 1: \",\n    content: data.contributing_factor_vehicle_1 || \"-\",\n  },\n  {\n    header: \"Contributing factor vehicle 2: \",\n    content: data.contributing_factor_vehicle_2 || \"-\",\n  },\n  {\n    header: \"Contributing factor vehicle 3: \",\n    content: data.contributing_factor_vehicle_2 || \"-\",\n  },\n  {\n    header: \"Contributing factor vehicle 4: \",\n    content: data.contributing_factor_vehicle_2 || \"-\",\n  },\n  {\n    header: \"Contributing factor vehicle 5: \",\n    content: data.contributing_factor_vehicle_2 || \"-\",\n  },\n];\n\nexport { baseUrl, cardDataMap, detailsDataMap, paginationLimit, tableHeaders };\n","import React from \"react\";\nimport { View, Text, StyleSheet, TouchableOpacity } from \"react-native\";\nimport { Table, TableWrapper, Row, Cell } from \"react-native-table-component\";\n\nimport { cardDataMap } from \"../config\";\nimport { getScaleNumber } from \"../utils/functions\";\n\nconst styles = StyleSheet.create({\n  container: {\n    width: \"100%\",\n    padding: getScaleNumber(8),\n    marginVertical: getScaleNumber(16),\n  },\n  headers: {\n    height: getScaleNumber(30),\n    backgroundColor: \"#DCDCDC\",\n  },\n  cells: {\n    height: getScaleNumber(30),\n  },\n  tableBorder: {\n    borderWidth: 1,\n    borderColor: \"#DBDBDB\",\n  },\n  text: {\n    fontFamily: \"PoppinsBold\",\n    textAlign: \"center\",\n  },\n  row: {\n    flexDirection: \"row\",\n  },\n  colContainer: {\n    flexGrow: 1,\n    backgroundColor: \"white\",\n    flexDirection: \"row\",\n    height: getScaleNumber(50),\n    padding: getScaleNumber(5),\n    alignItems: 'center',\n    justifyContent: \"center\",\n  },\n  colContent: {\n    fontFamily: \"Poppins\",\n    textAlign: \"center\",\n  },\n});\n\nconst TableView = ({ navigation, data, headers }) => {\n  const navigateToDetailScreen = (crashData) => {\n    navigation.navigate({ name: \"Details\", params: { crashData } });\n  };\n\n  const tableCell = (col, row) => (\n    <TouchableOpacity onPress={() => navigateToDetailScreen(row)} style={{ overflow: \"hidden\" }}>\n      <View style={styles.colContainer}>\n        <Text style={styles.colContent}>{col.content}</Text>\n      </View>\n    </TouchableOpacity>\n  );\n\n  return (\n    <View style={styles.container}>\n      <Table borderStyle={styles.tableBorder}>\n        <Row data={headers} style={styles.headers} textStyle={styles.text} />\n        {data.map((row, index) => (\n          <TableWrapper key={index.toString()} style={styles.row}>\n            {cardDataMap(row).map((col, index) => (\n              <Cell key={index.toString()} data={tableCell(col, row)} textStyle={styles.text} />\n            ))}\n          </TableWrapper>\n        ))}\n      </Table>\n    </View>\n  );\n};\n\nexport default TableView;\n","import React from \"react\";\nimport { View, Text, StyleSheet } from \"react-native\";\nimport { AntDesign } from \"@expo/vector-icons\";\n\nimport { paginationLimit } from \"../config\";\nimport { getScaleNumber } from \"../utils/functions\";\n\nconst styles = StyleSheet.create({\n  container: {\n    marginVertical: getScaleNumber(10),\n    flexDirection: \"row\",\n    width: \"50%\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n  },\n  text: {\n    fontFamily: \"Poppins\",\n    textAlign: 'center',\n    color: \"#3B9AE1\",\n  },\n});\n\nconst Pagination = ({ onPressLeft, onPressRight, offset }) => {\n  return (\n    <View style={styles.container}>\n      <AntDesign onPress={onPressLeft} name=\"leftcircle\" size={getScaleNumber(18)} color=\"#3B9AE1\" />\n      <Text style={styles.text}>{`${offset} - ${offset + paginationLimit}`} rows</Text>\n      <AntDesign onPress={onPressRight} name=\"rightcircle\" size={getScaleNumber(18)} color=\"#3B9AE1\" />\n    </View>\n  );\n};\n\nexport default Pagination;\n","import { View, StyleSheet, Platform } from \"react-native\";\n\nimport { AntDesign } from \"@expo/vector-icons\";\nimport { FontAwesome } from \"@expo/vector-icons\";\nimport { getScaleNumber } from \"../utils/functions\";\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-evenly\",\n    marginVertical: getScaleNumber(10),\n    width: Platform.OS === \"web\" ? \"50%\" : getScaleNumber(100),\n  },\n});\n\nconst ToggleView = ({ showTable, displayTable }) => {\n  return (\n    <View style={styles.container}>\n      <AntDesign name=\"table\" onPress={() => displayTable(true)} size={getScaleNumber(18)} color={showTable ? \"#3B9AE1\" : \"black\"} />\n      <FontAwesome name=\"list\" onPress={() => displayTable(false)} size={getScaleNumber(18)} color={!showTable ? \"#3B9AE1\" : \"black\"} />\n    </View>\n  );\n};\n\nexport default ToggleView;\n","import { useState } from \"react\";\nimport { View, Text, StyleSheet, TouchableOpacity, Platform } from \"react-native\";\nimport { DatePickerModal } from \"react-native-paper-dates\";\nimport { AntDesign } from \"@expo/vector-icons\";\n\nimport { getFormattedDate, getScaleNumber } from \"../utils/functions\";\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-evenly\",\n    width: Platform.OS === \"web\" ? \"40%\" : \"100%\",\n    marginVertical: getScaleNumber(10),\n  },\n  iconStyle: {\n    marginHorizontal: getScaleNumber(5),\n  },\n  pickerContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    padding: getScaleNumber(5),\n    borderWidth: 1,\n    borderColor: \"#3B9AE1\",\n    borderRadius: getScaleNumber(3),\n  },\n  text: {\n    fontFamily: \"Poppins\",\n    color: \"lightgray\",\n  },\n  button: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: getScaleNumber(5),\n    paddingHorizontal: getScaleNumber(10),\n    backgroundColor: \"#3B9AE1\",\n    borderWidth: 1,\n    borderColor: \"#3B9AE1\",\n    borderRadius: getScaleNumber(3),\n  },\n  buttonText: {\n    color: 'white',\n  }\n});\n\nconst DatePicker = ({ value, onDateChange, clearDate }) => {\n  const [open, setOpen] = useState(false);\n\n  const handleDateChange = (value) => {\n    onDateChange(value.date);\n    setOpen(false);\n  };\n\n  return (\n    <View style={styles.container}>\n      <TouchableOpacity onPress={() => setOpen(true)} style={styles.pickerContainer}>\n        <Text style={styles.text}>{value ? getFormattedDate(value.toISOString()) : \"YYYY-MM-DD\"}</Text>\n        <AntDesign style={styles.iconStyle} name=\"calendar\" size={getScaleNumber(16)} color=\"#3B9AE1\" />\n      </TouchableOpacity>\n      <DatePickerModal mode=\"single\" locale=\"en\" visible={open} date={value || new Date()} onConfirm={handleDateChange} onDismiss={() => setOpen(false)} />\n      <TouchableOpacity style={styles.button} onPress={clearDate}><Text style={[styles.text, styles.buttonText]}>Clear</Text></TouchableOpacity>\n    </View>\n  );\n};\n\nexport default DatePicker;\n","import React from \"react\";\nimport { View, StyleSheet, Platform } from \"react-native\";\n\nimport Pagination from \"./pagination-component\";\nimport ToggleView from \"./toggle-view-component\";\nimport DatePicker from \"./date-picker-component\";\nimport { getScaleNumber } from \"../utils/functions\";\n\nconst styles = StyleSheet.create({\n  container: {\n    marginVertical: getScaleNumber(10),\n    paddingHorizontal: getScaleNumber(10),\n    flexDirection: Platform.OS === \"web\" ? \"row\" : \"column\",\n    width: Platform.OS === \"web\" ? \"99vw\" : \"80%\",\n    borderColor: \"#DBDBDB\",\n    alignItems: \"center\",\n    justifyContent: \"space-around\",\n    borderWidth: 1,\n    backgroundColor: 'white',\n  },\n  innerContainer: {\n    width: Platform.OS === \"web\" ? \"40%\" : \"100%\",\n    flexDirection: \"row\",\n    justifyContent: 'space-evenly',\n  },\n});\n\nconst Options = ({ onPressLeft, onPressRight, offset, showTable, displayTable, value, onDateChange, clearDate }) => {\n  return (\n    <View style={styles.container}>\n      <DatePicker value={value} onDateChange={onDateChange} clearDate={clearDate} />\n      <View style={styles.innerContainer}>\n        <ToggleView showTable={showTable} displayTable={displayTable} />\n        <Pagination onPressLeft={onPressLeft} onPressRight={onPressRight} offset={offset} />\n      </View>\n    </View>\n  );\n};\n\nexport default Options;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { View, StyleSheet, ScrollView, ActivityIndicator, Text, Platform, FlatList } from \"react-native\";\nimport Animated, { useSharedValue, useAnimatedStyle, withTiming } from \"react-native-reanimated\";\n\nimport ScreenContainer from \"./screen-container\";\nimport Card from \"../components/card-component\";\nimport Table from \"../components/table-component\";\nimport Options from \"../components/options-component\";\nimport { getFormattedDate, getScaleNumber, SCREEN_WIDTH } from \"../utils/functions\";\nimport { baseUrl, cardDataMap, paginationLimit, tableHeaders } from \"../config\";\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  cardsContainer: {\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    padding: getScaleNumber(10),\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    width: \"100%\",\n  },\n  loaderStyle: {\n    flex: 1,\n  },\n  tableContainerStyle: {\n    width: Platform.OS === \"web\" ? \"80vw\" : SCREEN_WIDTH - getScaleNumber(10),\n  },\n  text: {\n    fontFamily: \"Poppins\",\n  }\n});\n\nconst ListScreen = ({ navigation }) => {\n  const [data, setData] = useState([]);\n  const [date, setDate] = useState();\n  const [loading, setLoading] = useState(true);\n  const [offset, setOffset] = useState(0);\n  const [showTable, setShowTable] = useState(false);\n\n  const opacity = useSharedValue(showTable);\n\n  const animatedTableStyles = useAnimatedStyle(() => {\n    return {\n      opacity: opacity.value ? withTiming(1) : withTiming(0),\n    };\n  });\n\n  const animatedListStyles = useAnimatedStyle(() => {\n    return {\n      opacity: opacity.value ? withTiming(0) : withTiming(1),\n    };\n  });\n\n  const getParams = () => {\n    const pagination = { $offset: offset, $limit: paginationLimit };\n    return date ? { crash_date: getFormattedDate(date.toISOString()), ...pagination } : pagination;\n  };\n\n  useEffect(() => {\n    setLoading(true);\n    const request = axios.get(baseUrl, { params: getParams() });\n    request\n      .then((res) => {\n        setData(res.data);\n        setLoading(false);\n      })\n      .catch((err) => console.log(\"Error fetching data: \", err));\n  }, [offset, date]);\n\n  const navigateToDetailScreen = (crashData) => {\n    navigation.navigate({ name: \"Details\", params: { crashData } });\n  };\n\n  const moveForward = () => {\n    setOffset((offset) => offset + paginationLimit);\n  };\n\n  const moveBackward = () => {\n    if (offset === 0) return;\n    setOffset((offset) => offset - paginationLimit);\n  };\n\n  const onDateChange = (date) => {\n    setDate(date);\n  };\n\n  const clearDate = () => setDate();\n\n  const displayTable = (value) => {\n    opacity.value = value;\n    setShowTable(value);\n  };\n\n  return (\n    <ScreenContainer>\n      <View style={styles.container}>\n        <Options\n          showTable={showTable}\n          displayTable={displayTable}\n          value={date}\n          onDateChange={onDateChange}\n          clearDate={clearDate}\n          onPressLeft={moveBackward}\n          onPressRight={moveForward}\n          offset={offset}\n        />\n        {loading ? (\n          <ActivityIndicator style={styles.loaderStyle} size=\"large\" color=\"#3B9AE1\" />\n        ) : (\n          <ScrollView fadingEdgeLength={5} contentContainerStyle={styles.cardsContainer}>\n            {data.length === 0 ? (\n              <Text style={styles.text}>No data found!</Text>\n            ) : showTable ? (\n              <Animated.View style={[animatedTableStyles, styles.tableContainerStyle]}>\n                <Table data={data} headers={tableHeaders} navigation={navigation} />\n              </Animated.View>\n            ) : (\n              <Animated.View style={[animatedListStyles, styles.cardsContainer]}>\n                {data.map((crashData, index) => (\n                  <Card onPress={() => navigateToDetailScreen(crashData)} key={index.toString()} data={cardDataMap(crashData)} />\n                ))}\n              </Animated.View>\n            )}\n          </ScrollView>\n        )}\n      </View>\n    </ScreenContainer>\n  );\n};\n\nexport default ListScreen;\n","import * as React from \"react\";\nimport { StyleSheet, Platform } from \"react-native\";\n\nimport { detailsDataMap } from \"../config\";\nimport ScreenContainer from \"./screen-container\";\nimport Card from \"../components/card-component\";\nimport { getScaleNumber, SCREEN_HEIGHT, SCREEN_WIDTH } from \"../utils/functions\";\n\nconst styles = StyleSheet.create({\n  screen: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  container: {\n    maxHeight: Platform.OS === \"web\" ? \"80vh\" : SCREEN_HEIGHT * (2/3),\n    padding: getScaleNumber(10),\n    backgroundColor: \"white\",\n    width: Platform.OS === \"web\" ? \"80vw\" : SCREEN_WIDTH - getScaleNumber(30),\n  },\n});\n\nconst DetailsScreen = ({ route }) => {\n  return (\n    <ScreenContainer style={styles.screen}>\n      <Card customStyle={styles.container} data={detailsDataMap(route.params.crashData)} hasScrollView/>\n    </ScreenContainer>\n  );\n};\n\nexport default DetailsScreen;\n","import React, { useState } from \"react\";\nimport { StyleSheet } from \"react-native\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { SafeAreaProvider } from \"react-native-safe-area-context\";\nimport { en, registerTranslation } from \"react-native-paper-dates\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\n\nimport * as Font from 'expo-font';\nimport AppLoading from 'expo-app-loading';\n\nimport ListScreen from \"./src/screens/list-screen\";\nimport DetailsScreen from \"./src/screens/details-screen\";\n\nregisterTranslation(\"en\", en);\n\nconst fetchFonts = () => {\n  return Font.loadAsync({\n    Poppins: require('./assets/fonts/Poppins-Regular.ttf'),\n    PoppinsBold: require('./assets/fonts/Poppins-SemiBold.ttf'),\n  });\n};\n\nconst styles = StyleSheet.create({\n  title: {\n    fontFamily: \"PoppinsBold\",\n  }\n})\n\nexport default function App() {\n  const Stack = createNativeStackNavigator();\n  const [dataLoaded, setDataLaded] = useState(false);\n\n  if (!dataLoaded) {\n    return (\n      <AppLoading \n        startAsync={fetchFonts} \n        onFinish={() => setDataLaded(true)}\n        onError={(err) => console.log(err)} \n      />\n    );\n  }\n\n  return (\n    <SafeAreaProvider>\n      <NavigationContainer>\n        <Stack.Navigator>\n          <Stack.Screen name=\"List\" component={ListScreen} options={{ title: \"Car Crashes List\", headerTitleStyle: styles.title }} />\n          <Stack.Screen name=\"Details\" component={DetailsScreen} options={{ title: \"Car Crash Details\", headerBackTitle: \"\", headerTitleStyle: styles.title }} />\n        </Stack.Navigator>\n      </NavigationContainer>\n    </SafeAreaProvider>\n  );\n}\n","module.exports = __webpack_public_path__ + \"./fonts/Poppins-Regular.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/Poppins-SemiBold.ttf\";"],"sourceRoot":""}